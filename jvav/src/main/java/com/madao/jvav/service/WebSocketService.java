package com.madao.jvav.service;

import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;

import javax.websocket.OnClose;
import javax.websocket.OnError;
import javax.websocket.OnOpen;
import javax.websocket.Session;
import javax.websocket.server.ServerEndpoint;
import java.io.IOException;
import java.util.Date;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

@ServerEndpoint(value = "/websocket")
@Component
@Slf4j
public class WebSocketService {

    private Session session;
    private String sessionId;
    private static Map<String, WebSocketService> clents = new ConcurrentHashMap<String, WebSocketService>();

    @OnOpen
    public void onOpen(Session session) {
        this.session = session;
        Date date = new Date();
        this.sessionId = date.toString();
        clents.put(sessionId, this);
        log.info("WebSocket连接建立成功");
    }

    @OnClose
    public void onClose() {
        log.info("关闭了一个WebSocket连接");
        clents.remove(this.sessionId);
    }

    @OnError
    public void onError(Session session, Throwable error) {
        log.info("WebSocket建立失败");
        error.printStackTrace();
    }

    //向客户端推送消息
    public static void sendMessage(String message) throws IOException {
        for (WebSocketService socketService : clents.values()) {
            socketService.session.getBasicRemote().sendText(message);
        }
    }

}
